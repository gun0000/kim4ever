<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
"http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.myezen.myapp.persistance.AdminService_Mapper">
	
	
	
<sql id="search3">
 <if test="searchType != null and searchType != ''">
    <choose>
      <when test="searchType == 'memberId'">
        AND memberId LIKE '%' || #{keyword} || '%'
      </when>
      <when test="searchType == 'memberName'">
        AND memberName LIKE '%' || #{keyword} || '%'
      </when>
      <when test="searchType == 'memberType'">
        AND memberType LIKE '%' || #{keyword} || '%'
      </when>
    </choose>
  </if>
</sql>

	
<!--관리자 회원관리 리스트  -->
<select id="memberList" resultType="com.myezen.myapp.domain.BikeJoinVo">
  SELECT *
  FROM (
    SELECT ROWNUM AS rnum, A.*
    FROM (
	  SELECT memberId, memberName, memberAge, memberDelYN, writeDay, memberType
	  FROM member1234
	  WHERE memberDelYN = 'N'
	   <include refid="search3" />
	  ORDER BY memberType ASC, writeDay DESC
	   ) A
       <![CDATA[WHERE ROWNUM <= #{page} * #{perPageNum}]]>
  	) B
  <![CDATA[WHERE B.rnum >= (#{page} - 1) * #{perPageNum} + 1]]>
</select>



<select id="memberListCount" resultType="int">
	  SELECT count(*) as cnt
	  FROM member1234
	  WHERE memberDelYN = 'N'
	   <include refid="search3" />
	  ORDER BY memberType ASC, writeDay DESC
</select>


<sql id="search4">
 <if test="searchType != null and searchType != ''">
    <choose>
      <when test="searchType == 'memberId'">
        AND memberId LIKE '%' || #{keyword} || '%'
      </when>
      <when test="searchType == 'memberName'">
        AND memberName LIKE '%' || #{keyword} || '%'
      </when>
    </choose>
  </if>
</sql>

	<!--관리자 탈퇴회원관리 리스트  -->
<select id="memberOutList" resultType="com.myezen.myapp.domain.BikeJoinVo">
 SELECT *
  FROM (
    SELECT ROWNUM AS rnum, A.*
    FROM (
	  SELECT memberId, memberName, memberAge, memberDelYN, memberOutDay, memberType
	  FROM member1234
	  WHERE memberDelYN = 'Y'
	  <include refid="search4" />
	  ORDER BY memberOutDay desc
	   ) A
       <![CDATA[WHERE ROWNUM <= #{page} * #{perPageNum}]]>
  	) B
  <![CDATA[WHERE B.rnum >= (#{page} - 1) * #{perPageNum} + 1]]>
</select>

<select id="memberOutListCount" resultType="int">
	  SELECT count(*) as cnt
	  FROM member1234
	  WHERE memberDelYN = 'Y'
	   <include refid="search4" />
	   ORDER BY memberOutDay desc
	   
</select>


	
	<!--관리자 회원삭제  -->
	<delete id="deleteMember" parameterType="String">
	UPDATE member1234 SET memberDelYN ='Y', memberOutDay = SYSDATE WHERE memberId=#{memberId}
	</delete>
	
	<!-- 대여소 이용 가능 자전거 -->
	<select id="canRentBike" resultType="com.myezen.myapp.domain.BikeJoinVo">
	SELECT
    a.RENTALSHOPNAME,
    	COUNT(CASE WHEN b.BIKETYPE = '일반자전거' THEN b.BKIDX END) AS bikeNorCnt,
    	COUNT(CASE WHEN b.BIKETYPE = '전기자전거' THEN b.BKIDX END) AS bikeEleCnt
	FROM
    	RENTALSHOP1234 a
    	LEFT JOIN BIKE1234 b ON a.RENTALSHOPNAME = b.BIKELOCATION AND b.BIKESTATE = 'Y'
		GROUP BY
    	a.RENTALSHOPNAME	
	</select>

	<!--관리자 메인 페이지 요일 별 이용 현황 -->
	<select id="getRentalCountByDateRange" resultType="com.myezen.myapp.domain.BikeJoinVo">
	SELECT
		  TO_CHAR(a.date_value, 'YYYY-MM-DD') AS dayago,
		  NVL(SUM(CASE WHEN b.bikeType = '일반자전거' THEN 1 ELSE 0 END), 0) AS rentNorCount,
		  NVL(SUM(CASE WHEN b.bikeType = '전기자전거' THEN 1 ELSE 0 END), 0) AS rentEleCount
		FROM (
		  SELECT TRUNC(SYSDATE) - LEVEL + 1 AS date_value
		  FROM dual
		  CONNECT BY TRUNC(SYSDATE) - LEVEL + 1 >= TRUNC(SYSDATE) - 6
		) a
		LEFT JOIN (
		  SELECT bkidx, TRUNC(rentDay) AS rentDay
		  FROM RENT1234
		  WHERE TRUNC(rentDay) >= TRUNC(SYSDATE) - 6
		) r ON a.date_value = r.rentDay
		LEFT JOIN bike1234 b ON r.bkidx = b.BKIDX
		WHERE a.date_value >= TRUNC(SYSDATE) - 6
		GROUP BY TO_CHAR(a.date_value, 'YYYY-MM-DD')
		ORDER BY TO_CHAR(a.date_value, 'YYYY-MM-DD') DESC
	</select>
 	
<sql id="search1">
	<if test="searchType != null and searchType != ''">
        <choose>
          <when test="searchType == 'memberName'">
            AND m.memberName LIKE '%'||#{keyword}||'%'
          </when>
          <when test="searchType == 'memberPhone'">
            AND m.memberPhone LIKE '%'||#{keyword}||'%'
          </when>
          <when test="searchType == 'rentPlace'">
            AND r.rentPlace LIKE '%'||#{keyword}||'%'
          </when>
          <when test="searchType == 'errorContent'">
            AND e.errorContent LIKE '%'||#{keyword}||'%'
          </when>
        </choose>
      </if>
</sql>
	
	
	<!-- 신고 내역 리스트 -->
<select id="searchBikeErrors" parameterType="com.myezen.myapp.domain.SearchCriteria"
  resultType="com.myezen.myapp.domain.BikeJoinVo">

  SELECT *
  FROM (
    SELECT ROWNUM AS rnum, A.*
    FROM (
      SELECT
        m.memberName,
        m.memberPhone,
        r.rentPlace,
        b.bikeType,
        b.bikeCode,
        b.bikeState,
        e.eidx,
        e.errorDay,
        e.errorContent
      FROM rent1234 r
      JOIN member1234 m ON m.midx = r.midx
      JOIN bike1234 b ON b.bkidx = r.bkidx
      JOIN error1234 e ON e.ridx = r.ridx
      WHERE 1=1
   
     <include refid="search1" />
      ORDER BY e.errorDay DESC
    ) A
       <![CDATA[WHERE ROWNUM <= #{page} * #{perPageNum}]]>
    
  ) B
  <![CDATA[WHERE B.rnum >= (#{page} - 1) * #{perPageNum} + 1]]>
  

</select>
	
	
	
	<!--수리내역 갯수  -->
	 <select id="searchBikeErrorsCount" resultType="int">
        SELECT COUNT(*)
		  FROM rent1234 r
		  JOIN member1234 m ON m.midx = r.midx
		  JOIN bike1234 b ON b.bkidx = r.bkidx
		  JOIN error1234 e ON e.ridx = r.ridx
		  <if test="searchType != null and searchType != ''">
		    <choose>
		        <when test="searchType == 'memberName'">
		            AND m.memberName LIKE '%'||#{keyword}||'%'
		        </when>
		        <when test="searchType == 'memberPhone'">
		            AND m.memberPhone LIKE '%'||#{keyword}||'%'
		        </when>
		        <when test="searchType == 'rentPlace'">
		            AND r.rentPlace LIKE '%'||#{keyword}||'%' 
		        </when>
		        <when test="searchType == 'errorContent'">
	                AND e.errorContent LIKE '%'||#{keyword}||'%'
	            </when>
		    </choose>
		</if>
     </select>
     


	<!-- 고장 내역 상세 보기 -->
	<select id="getErrorContent" parameterType="int" resultType="com.myezen.myapp.domain.BikeJoinVo">
  	SELECT
		m.memberName,
		m.memberPhone,
		r.rentPlace,
		b.bikeType,
		b.bikeCode,
		e.eidx,
		e.errorDay,
		e.errorContent,
		e.errorState
	FROM rent1234 r
	JOIN member1234 m ON m.midx = r.midx
	JOIN bike1234 b ON b.bkidx = r.bkidx
	JOIN error1234 e ON	e.ridx = r.ridx	
	where
	e.eidx =#{eidx}
	</select>
	
	<!-- 수리버튼 누르면 bikeState R로 변경 -->
	<update id="updateBikeState" parameterType="int">
   	UPDATE bike1234
		SET bikeState = 'E'
		WHERE bkidx IN (SELECT b.bkidx
      		FROM rent1234 r
      		JOIN bike1234 b ON b.bkidx = r.bkidx
      		JOIN error1234 e ON e.ridx = r.ridx
      		WHERE e.eidx =#{eidx})
	</update>
	
	
	<sql id="search2">
		<if test="searchType != null and searchType != ''">
		<choose>
			<when test="searchType == 'bikeType'">
				AND b.bikeType LIKE '%'||#{keyword}||'%'
			</when>
			<when test="searchType == 'bikeCode'">
				AND b.bikeCode LIKE '%'||#{keyword}||'%'
			</when>
			<when test="searchType == 'errorContent'">
				AND e.errorContent LIKE '%'||#{keyword}||'%'
			</when>
			<when test="searchType == 'bikeState'">
				AND b.bikeState LIKE '%'||#{keyword}||'%'
			</when>
		</choose>
		</if>		
	</sql>


	<!-- 수리 내역 리스트 -->
	<select id="searchBikerepairList" parameterType="com.myezen.myapp.domain.SearchCriteria" resultType="com.myezen.myapp.domain.BikeJoinVo">
	 SELECT *
  		FROM (
    SELECT ROWNUM AS rnum, A.*
    	FROM (
	SELECT
		m.memberName,
		m.memberPhone,
		r.rentPlace,
		b.bikeType,
		b.bikeCode,
		b.bikeState,
		e.eidx,
		e.errorDay,
		e.errorContent
	FROM rent1234 r
	JOIN member1234 m ON m.midx = r.midx
	JOIN bike1234 b ON b.bkidx = r.bkidx
	JOIN error1234 e ON	e.ridx = r.ridx
	WHERE 1=1
	 <include refid="search2" />
      ORDER BY e.errorDay DESC
    ) A
       <![CDATA[WHERE ROWNUM <= #{page} * #{perPageNum}]]>
    
  ) B
  <![CDATA[WHERE B.rnum >= (#{page} - 1) * #{perPageNum} + 1]]>
	</select>
	
	<!-- 수리 내역 리스트 갯수 -->
	<select id="searchBikerepairListCount" resultType="int">
       SELECT count(*) as cnt
	FROM rent1234 r
	JOIN member1234 m ON m.midx = r.midx
	JOIN bike1234 b ON b.bkidx = r.bkidx
	JOIN error1234 e ON	e.ridx = r.ridx
	<if test="searchType != null and searchType != ''">
		<choose>
			<when test="searchType == 'bikeType'">
				AND b.bikeType LIKE '%'||#{keyword}||'%'
			</when>
			<when test="searchType == 'bikeCode'">
				AND b.bikeCode LIKE '%'||#{keyword}||'%'
			</when>
			<when test="searchType == 'errorContent'">
				AND e.errorContent LIKE '%'||#{keyword}||'%'
			</when>
			<when test="searchType == 'bikeState'">
				AND b.bikeState LIKE '%'||#{keyword}||'%'
			</when>
		</choose>
	</if>		
     </select>
	
	<!-- 관리자 자전거 리스트 -->
	<select id="bikeList" parameterType="int" resultType="com.myezen.myapp.domain.BikeJoinVo">
	SELECT * FROM bike1234 WHERE bkidx BETWEEN 1 AND 10
	</select>
	
	<!-- 회원 상세 정보 보기 -->
	<select id="getMemberByMemberId" parameterType="string" resultType="com.myezen.myapp.domain.BikeJoinVo">
  	SELECT * FROM member1234 where memberId = #{memberId}
	</select>


	<!-- 대여소 리스트 -->
	<select id="rentalshopList" parameterType="int" resultType="com.myezen.myapp.domain.BikeJoinVo">
	SELECT * FROM rentalshop1234 order by rsidx asc
	</select>
	
	<!-- 대여소 등록 -->
	<insert id="rentalshopInsert" parameterType="String"> 
		INSERT INTO rentalshop1234(rsidx,rentalshopName,rentalshopLocation,rentalshopLatitude,rentalshopLongitude)
		VALUES(rsidx_seq.nextval,#{0},#{1},#{2},#{3})
	</insert>

	<!-- 대여소 등록 페이지 이름 중복체크-->
	<select id="adminrentalshopNameCheck" parameterType="String" resultType="int">
		select count(*) from rentalshop1234 where rentalshopName=#{rentalshopName}
	</select>

	<!--대여소 삭제  -->
	<delete id="deleteRentalshop" parameterType="String">
	delete from rentalshop1234 WHERE rentalshopName=#{rentalshopName}
	</delete>
	
	<!--관리자 자전거 리스트 상태-->
	<update id="bikeState" parameterType="String">
  	UPDATE bike1234
  	SET bikeState = #{bikeState}
 	WHERE bikeId = #{bikeId}
	</update>

	<!-- 관리자 메인페이지 자전거 총 갯수 -->
	<select id="getTotalBkidxCount" resultType="java.lang.Integer">
        SELECT COUNT(*) FROM bike1234
    </select>

	<!-- 관리자 메인페이지 대여중인 자전거 -->
	<select id="getTotalRidxCount" resultType="java.lang.Integer">
         SELECT COUNT(*) FROM bike1234 where bikeState LIKE 'N'
    </select>
	
	<!-- 관리자 메인페이지 고장 난 자전거  -->
	<select id="getTotalErrorCount" resultType="java.lang.Integer">
        SELECT COUNT(*) FROM bike1234 where bikeState LIKE 'E'
    </select>
	
	<!-- 관리자 메인페이지 대여 가능한 자전거  -->
	<select id="getTotalRentCount" resultType="java.lang.Integer">
        SELECT COUNT(*) FROM bike1234 where bikeState LIKE 'Y'
    </select>
    

		
	<sql id="search">
		<if test="searchType != null and searchType.equals('writer')">
				and writer like '%'||#{keyword}||'%'
		</if>
		
		<if test="searchType != null and searchType.equals('subject')">
				and  subject like '%'||#{keyword}||'%'
		</if>
	</sql>
	
	
	
	
	
	
	
	<!-- 모임 리스트 -->
	<select id="gatheringList" parameterType="int" resultType="com.myezen.myapp.domain.GatheringJoinVo">
		SELECT
			g.giidx, 
			i.ginfoName,
			m.memberName,
			i.gInfoCreationDay,
			i.gInfoParticipating
			FROM GATHERING1234 g
			JOIN member1234 m ON m.midx = g.midx
			JOIN gathering_info1234 i ON i.giidx = g.giidx
			WHERE
			gatheringmembertype = 'TL'
			ORDER BY
   			i.gInfoCreationDay DESC
	</select>
	
	<!-- 모임 상세 리스트 -->
	<select id="gatheringDetail" parameterType="int" resultType="com.myezen.myapp.domain.GatheringJoinVo">
		SELECT
		    i.GIIDX,
		    i.gInfoName,
		    i.gInfoCapacity,
		    i.gInfoCreationDay,
		    i.gInfoAreaIntroduction,
		    g.MIDX,
		    m.memberName,
		    COALESCE(COUNT(d.gdix), 0) AS REPORTCNT,
		    img.imageName
		FROM
		    gathering_info1234 i
		    JOIN gathering1234 g ON g.giidx = i.giidx
		    JOIN member1234 m ON m.midx = g.midx
		    LEFT JOIN gathering_Declaration1234 d ON d.giidx = i.giidx
		    LEFT JOIN image1234 img ON img.giidx = i.giidx AND img.ImgType = 'GT'
		WHERE
		    g.gatheringMemberType = 'TL'
		    AND i.giidx = #{giidx}
		GROUP BY
		    i.GIIDX, i.gInfoName, i.gInfoCapacity, i.gInfoCreationDay, i.gInfoAreaIntroduction, g.MIDX, m.memberName, img.imageName
	</select>
	
	<!-- 모임 신고 내역 리스트 -->
	<select id="gatheringDeclaration" resultType="com.myezen.myapp.domain.GatheringJoinVo" parameterType="com.myezen.myapp.domain.GatheringJoinVo"> 
       SELECT gi.giidx,
	       gi.GINFONAME,
	       gi.ginfoarea,
	       m.memberName AS reporterName,
	       gi.gInfoCreationDay,
	       gi.gInfoParticipating,
	       gd.gdix,
	       gd.gatheringReportContent,
	       gd.gatheringDeclarationDay,
	       ml.memberName AS TL
		FROM GATHERING_DECLARATION1234 gd
		JOIN GATHERING_info1234 gi ON gi.giidx = gd.giidx
		JOIN member1234 m ON m.midx = gd.midx -- 신고자 정보를 가져오기 위한 조인
		JOIN GATHERING1234 g ON g.giidx = gd.giidx -- 모임 정보를 가져오기 위한 조인
		JOIN member1234 ml ON ml.midx = g.midx -- 모임장 정보를 가져오기 위한 조인
		WHERE  g.gatheringMemberType = 'TL'
		ORDER BY
		gd.gatheringDeclarationDay DESC
   </select>
	
	<!-- 모임 신고 내역 상세 보기 -->
	<select id="DeclarationDetail" parameterType="int" resultType="com.myezen.myapp.domain.GatheringJoinVo">
	SELECT gi.giidx, gi.GINFONAME, m.memberName AS reporterName, gi.gInfoCreationDay, gi.gInfoParticipating, gd.gdix, gd.gatheringReportContent, gd.gatheringDeclarationDay, ml.memberName AS TL
	FROM GATHERING_DECLARATION1234 gd
	JOIN GATHERING_info1234 gi ON gi.giidx = gd.giidx
	JOIN member1234 m ON m.midx = gd.midx -- 신고자 정보를 가져오기 위한 조인
	JOIN GATHERING1234 g ON g.giidx = gd.giidx -- 모임 정보를 가져오기 위한 조인
	JOIN member1234 ml ON ml.midx = g.midx -- 모임장 정보를 가져오기 위한 조인
	WHERE gd.gdix = #{gdix} AND g.gatheringMemberType = 'TL'
	</select>
	
</mapper>

