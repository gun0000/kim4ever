<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
"http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<!-- 쿼리만드는곳 -->
<mapper namespace="com.myezen.myapp.persistance.MemberService_Mapper">
	<!-- 회원가입 -->
	<insert id="memberInsert" parameterType="mv">
		INSERT INTO member1234(midx,memberId,memberPwd,memberName,memberAge,memberPhone,memberEmail,memberAddr)
		VALUES(midx_seq.nextval,#{memberid},#{memberpwd},#{membername},#{memberage},#{memberphone},#{memberemail},#{memberaddr})
	</insert>
	<!-- 회원가입 아이디중복체크 -->
	<select id="memberIdCheck" parameterType="String" resultType="int">
		select count(*) from member1234 where delyn='N' and memberId=#{memberId}
	</select>
	<!-- 회원가입 이메일중복체크 -->
	<select id="memberEmailCheck" parameterType="String" resultType="int">
		select count(*) from member1234 where delyn='N' and memberEmail=#{memberEmail}
	</select>
	
	<!-- 로그인에서 아이디찾기 -->
	<select id="memberIdFind" parameterType="String" resultType="String">
		select memberId from member1234 where delyn='N' and memberName=#{0} and memberEmail=#{1}
	</select>
	<!-- 로그인에서 비밀번호찾기 -->
	<update id="memberPwdReset" parameterType="String">
	    update member1234 set memberPwd = #{0} where memberId = #{1} and memberName = #{2} and memberEmail = #{3} and delyn='N'
	</update>
	<!-- 로그인에서 비밀번호 찾기 대조 -->
	<select id="memberPwdFindMatch" parameterType="String" resultType="int">
		select count(*) from member1234 where delyn='N' and memberId=#{0} and memberName=#{1} and memberEmail=#{2}
	</select>
	<!-- 로그인에서 아이디찾기,비밀번호찾기 인증번호저장 -->
	<insert id="memberMailAuthSave" parameterType="String">
		INSERT INTO mailAuth1234(mail_idx,mail_key,memberEmail)
		VALUES(mail_idx_seq.NEXTVAL,#{0},#{1}) 
	</insert>
	<!-- 로그인에서 아이디찾기,비밀번호찾기 인증번호 대조 -->
	<select id="memberMailAuthMatch" parameterType="String" resultType="int">
		select count(*) from mailAuth1234 where mail_key=#{0} and memberEmail=#{1}
	</select>
	<!-- 로그인에서 아이디찾기,비밀번호찾기 인증번호 대조후 삭제 -->
	<delete id="memberMailAuthKeyDel" parameterType="String">
		delete from mailAuth1234 where mail_key=#{0} and memberEmail=#{1}
	</delete>
	<!-- 로그인에서 아이디찾기 인증번호클릭  대조 -->
	<select id="memberIdFindMatch" parameterType="String" resultType="int">
		select count(*) from member1234 where delyn='N' and memberName=#{0} and memberEmail=#{1}
	</select>	
	<!-- 로그인에서 비밀번호찾기 인증번호클릭  대조 -->
	<select id="memberPwdFindAuthMatch" parameterType="String" resultType="int">
		select count(*) from member1234 where delyn='N' and memberId=#{0} and memberName=#{1} and memberEmail=#{2}
	</select>
	
	<select id="memberList" resultType="mv">
	select memberid,membername,memberage,delyn,writeday,membertype from member1234 order by memberType asc
	</select>

	
	<select id="memberLogin" parameterType="String" resultType="mv">
	select * from member1234 where delyn='N' and memberid=#{memberId}
	</select>


	<delete id="deleteMember" parameterType="String">
	delete from member1234 WHERE memberid=#{memberId}
	</delete>

	<select id="getMemberInfo" parameterType="int" resultType="mv">
	SELECT * FROM member1234 WHERE midx = #{midx}
	</select>
	
	<update id="updateMember" parameterType="mv">
  UPDATE member1234
  <set>
    <if test="memberpwd != null">memberPwd = #{memberpwd},</if>
    <if test="membername != null">memberName = #{membername},</if>
    <if test="memberage != null">memberAge = #{memberage},</if>
    <if test="memberphone != null">memberPhone = #{memberphone},</if>
    <if test="memberemail != null">memberEmail = #{memberemail},</if>
  </set>
  WHERE midx = #{midx}
</update>
	
	<select id="getMemberByMemberId" parameterType="string" resultType="mv">
  	SELECT * FROM member1234 where memberId = #{memberid}
	</select>
    
</mapper>