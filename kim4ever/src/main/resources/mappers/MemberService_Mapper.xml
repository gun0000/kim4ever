<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
"http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<!-- 쿼리만드는곳 -->
<mapper namespace="com.myezen.myapp.persistance.MemberService_Mapper">
	<!-- 회원가입 -->
	<insert id="memberInsert" parameterType="mv">
		INSERT INTO member1234(memberId,memberPwd,memberName,memberAge,memberPhone,memberEmail,memberAddr,memberProfile,memberIntro, writeDay)
		VALUES(#{memberId},#{memberPwd},#{memberName},#{memberAge},#{memberPhone},#{memberEmail},#{memberAddr},'/profile.jpg','안녕하세요.', NOW())
	</insert>
	<!-- 회원가입 아이디중복체크 -->
	<select id="memberIdCheck" parameterType="String" resultType="int">
		select count(*) from member1234 where MEMBERDELYN='N' and memberId=#{memberId}
	</select>
	<!-- 회원가입 이메일중복체크 -->
	<select id="memberEmailCheck" parameterType="String" resultType="int">
		select count(*) from member1234 where MEMBERDELYN='N' and memberEmail=#{memberEmail}
	</select>

	
	<!-- 회원가입 휴대폰 인증 -->
		<!-- 휴대폰 번호, 인증번호 데이터베이스에 저장 -->
		<insert id="savePhoneNumberVerification" parameterType="com.myezen.myapp.domain.BikeJoinVo">
		    INSERT INTO PHONE1234 (PHONENUMBER, VERIFICATIONCODE)
		    VALUES (#{phoneNumber}, #{verificationCode})
		</insert>
		
		<!-- 인증번호를 받아서 일치 여부 확인 -->
		<select id="verifyPhoneNumber" parameterType="java.util.HashMap" resultType="boolean">		 
		    SELECT CASE WHEN COUNT(*) > 0 THEN 1 ELSE 0 END
			FROM PHONE1234
			WHERE PHONENUMBER = #{userPhoneNumber}
			AND VERIFICATIONCODE = #{randomNumber}
			AND VERIFICATIONSTATUS = 'N';
		</select>
		
		<!-- 휴대폰 번호를 받아서 해당 번호에 대해 저장된 인증번호를 가져옴 -->
		<select id="getSavedRandomNumber" parameterType="java.lang.String" resultType="int">
			SELECT VERIFICATIONCODE
			FROM PHONE1234
			WHERE PHONENUMBER = #{userPhoneNumber}
			  AND VERIFICATIONSTATUS = 'N'
			ORDER BY CREATED_AT DESC
			LIMIT 1;	<!-- FETCH FIRST 1 ROW ONLY를 MySQL에서 사용하는 LIMIT 1로 변경 해야 함 -->
		</select>
	
		<!-- 인증 했을 때 Y로 업데이트 -->
		<update id="updateVerificationStatus" parameterType="java.lang.String">
		 UPDATE PHONE1234
		    SET VERIFICATIONCODE = null,
		        VERIFICATIONSTATUS = 'Y'
		    WHERE PHONENUMBER = #{userPhoneNumber}
		</update>
	<!-- 회원가입 이메일 인증 할 때 인증번호 대조 -->
	<select id="joinEmailCheck" parameterType="String" resultType="boolean">
		SELECT CASE WHEN COUNT(*) > 0 THEN 1 ELSE 0 END
		from mailAuth1234
		where mail_key = #{0}
		 AND memberEmail = #{1}
	</select>

	
	<!-- 로그인에서 아이디찾기 -->
	<select id="memberIdFind" parameterType="String" resultType="String">
		select memberId from member1234 where MEMBERDELYN='N' and memberName=#{0} and memberEmail=#{1}
	</select>
	<!-- 로그인에서 비밀번호찾기 -->
	<update id="memberPwdReset" parameterType="String">
	    update member1234 set memberPwd = #{0} where memberId = #{1} and memberName = #{2} and memberEmail = #{3} and MEMBERDELYN='N'
	</update>
	<!-- 로그인에서 비밀번호 찾기 대조 -->
	<select id="memberPwdFindMatch" parameterType="String" resultType="int">
		select count(*) from member1234 where MEMBERDELYN='N' and memberId=#{0} and memberName=#{1} and memberEmail=#{2}
	</select>
	<!-- 로그인에서 아이디찾기,비밀번호찾기 인증번호저장 -->
	<insert id="memberMailAuthSave" parameterType="String">
		INSERT INTO mailAuth1234(mail_key,memberEmail)
		VALUES(#{0},#{1}) 
	</insert>
	<!-- 로그인에서 아이디찾기,비밀번호찾기 인증번호 대조 -->
	<select id="memberMailAuthMatch" parameterType="String" resultType="int">
		select count(*) from mailAuth1234 where mail_key=#{0} and memberEmail=#{1}
	</select>
	<!-- 로그인에서 아이디찾기,비밀번호찾기 인증번호 대조후 삭제 -->
	<delete id="memberMailAuthKeyDel" parameterType="String">
		delete from mailAuth1234 where mail_key=#{0} and memberEmail=#{1}
	</delete>
	<!-- 로그인에서 아이디찾기 인증번호클릭  대조 -->
	<select id="memberIdFindMatch" parameterType="String" resultType="int">
		select count(*) from member1234 where MEMBERDELYN='N' and memberName=#{0} and memberEmail=#{1}
	</select>	
	<!-- 로그인에서 비밀번호찾기 인증번호클릭  대조 -->
	<select id="memberPwdFindAuthMatch" parameterType="String" resultType="int">
		select count(*) from member1234 where MEMBERDELYN='N' and memberId=#{0} and memberName=#{1} and memberEmail=#{2}
	</select>
	<!-- 회원리스트  -->
	<select id="memberList" resultType="mv">
	select memberId,memberName,memberAge,MEMBERDELYN,writeDay,memberType from member1234 order by memberType asc
	</select>
	<!-- 회원로그인 -->
	<select id="memberLogin" parameterType="String" resultType="mv">
	select * from member1234 where memberdelyn='N' and memberId=#{memberId}
	</select>
	<!-- 로그인 에서 이용중인 내역 가져오기 -->
	<select id="bikeRentUsing" parameterType="int" resultType="com.myezen.myapp.domain.BikeJoinVo">
		SELECT ridx,a.bkidx from rent1234 a 
		join bike1234 b on b.bkidx = a.bkidx
		where midx = #{0} and bikeState = 'N' 
		order by rentday desc limit 1
	</select>
	<!-- 회원삭제 -->
	<delete id="deleteMember" parameterType="String">
	delete from member1234 WHERE memberId=#{memberId}
	</delete>
	<!-- 회원상세정보 -->
	<select id="getMemberInfo" parameterType="int" resultType="mv">
	SELECT * FROM member1234 WHERE midx = #{midx}
	</select>
	<!-- 마이페이지 회원정보수정 -->
	<update id="updateMember" parameterType="mv"> 
	  UPDATE member1234
	  <set>
	    <if test="memberPwd != null">memberPwd = #{memberPwd},</if>
	    <if test="memberName != null">memberName = #{memberName},</if>
	    <if test="memberAge != null">memberAge = #{memberAge},</if>
	    <if test="memberPhone != null">memberPhone = #{memberPhone},</if>
	    <if test="memberEmail != null">memberEmail = #{memberEmail},</if>
	  </set>
	  WHERE midx = #{midx}
	</update>
	
	<!-- 회원탈퇴 -->
	<update id="withdrawMember" parameterType="String">
    UPDATE member1234
    SET memberDelYN = 'Y',
        memberOutDay = CURDATE()
    WHERE memberId = #{memberId}
	</update>

	<!-- 회원아이디 조회 -->
	<select id="getMemberByMemberId" parameterType="string" resultType="mv">
  	SELECT * FROM member1234 where memberId = #{memberId}
	</select>
	
	<!-- 회원비밀번호 조회 -->
	<select id="getMemberByMemberPwd" parameterType="string" resultType="mv">
  	SELECT * FROM member1234 where memberPwd = #{memberPwd}
	</select>
	
	
	<!--소셜 회원가입 -->
	<insert id="googleMemberInsert" parameterType="String">
		INSERT INTO member1234(memberId,memberPwd,memberName,memberEmail,memberLoginType,memberProfile,memberIntro, writeDay)
		VALUES(#{0},#{1},#{2},#{0},'구글','/profile.jpg','안녕하세요.', NOW())
	</insert>
	<insert id="kakaoMemberInsert" parameterType="String">
		INSERT INTO member1234(memberId,memberPwd,memberName,memberEmail,memberLoginType,memberProfile,memberIntro, writeDay)
		VALUES(#{0},#{1},#{2},#{0},'카카오','/profile.jpg','안녕하세요.', NOW())
	</insert>
	<!--소셜 멤버 확인 -->
	<select id="socialMemberCheck" parameterType="String" resultType="int">
		select count(*) from member1234 where MEMBERDELYN='N' and memberId=#{0}
	</select>
	<!-- 내가 쓴 게시글 -->
	 <select id="getMyPosts" resultType="com.myezen.myapp.domain.BikeJoinVo" parameterType="String">
		SELECT * FROM board1234 WHERE writer = #{memberName} and boarddelyn = 'N' 
    </select>
	<!-- 회원프로필(내 간단소개) -->
	 <update id="memberUpdateIntro" parameterType="mv">
        UPDATE member1234 SET memberIntro = #{memberIntro} WHERE midx = #{midx}
    </update>
    <!-- 회원프로필(내 간단소개)  -->
    <select id="getMemberIntro"  resultType="String">
	    SELECT memberIntro
	    FROM member1234
	    WHERE midx = #{midx}
	</select>

   	<!-- 회원 프로필 업데이트 /*김건우*/ -->
	<update id="memberUpdateMemberProfile" parameterType="mv">
	     update member1234 set memberProfile = #{memberProfile} where midx = #{midx} and MEMBERDELYN='N'
	</update>
     <!-- 회원프로필(프로필이미지)  -->
    <select id="getMemberProfile"  resultType="String" parameterType="int">
	    SELECT memberProfile
	    FROM member1234
	    WHERE midx = #{midx}
	</select>
    <!-- QR찍고 휴대폰 번호 없는지 체크 -->
    <select id="memberPhoneCheck" parameterType="int" resultType="String">
    	select count(memberPhone) as memberPhone from member1234 where midx = #{0} 
    </select>
    

    

    
</mapper>